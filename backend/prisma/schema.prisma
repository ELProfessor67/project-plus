generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id      Int      @id @default(autoincrement()) 
  name         String   @db.VarChar(100) 
  email        String   @unique        
  password_hash String   @db.VarChar(255)
  account_name String
  bring String? @default("null")
  teams_member_count String? @default("null") 
  focus String[]
  hear_about_as   String? @default("null") 
  created_at   DateTime @default(now()) 
  updated_at   DateTime @updatedAt
  Projects Project[]
  Collaboration ProjectMember[]
  AssignedTasks TaskMember[]
  CreatedTasks Task[]
  Notifications Notification[]
  otps OTP[]
}



model Project {
  project_id  Int      @id @default(autoincrement()) 
  name        String   @db.VarChar(255)           
  description String?  @db.Text                  
  created_by  Int                                  
  created_at  DateTime @default(now())              
  updated_at  DateTime @updatedAt         
  user User @relation(fields: [created_by], references: [user_id])
  Members ProjectMember[]
  Tasks Task[]
  invitations Invitation[]
}

enum Role {
  ADMIN
  MEMBER
  VIEWER
}


model ProjectMember {
  project_member_id Int       @id @default(autoincrement())
  project_id        Int      
  user_id           Int    
  role              Role      @default(MEMBER) 
  added_at          DateTime  @default(now())


  project Project @relation(fields: [project_id], references: [project_id]) 
  user User     @relation(fields: [user_id], references: [user_id])
}

enum Status {
  TO_DO
  IN_PROGRESS
  STUCK
  DONE
}

enum Priorities {
  CRITICAL
  HIGH
  MEDIUM
  LOW
  NONE
}

model Task {
  task_id     Int       @id @default(autoincrement())
  project_id  Int   
  name        String    @db.VarChar(255)
  description String?   @db.Text
  status      Status    @default(TO_DO)
  created_by  Int      
  assigned_to Int?     
  created_at  DateTime  @default(now()) 
  updated_at  DateTime  @updatedAt
  priority Priorities @default(NONE)
  last_date DateTime @default(now())

  // Relations
  project Project @relation(fields: [project_id], references: [project_id])
  assignees TaskMember[]
  creator User @relation(fields: [created_by], references: [user_id]) 
}



model TaskMember {
  task_member_id Int       @id @default(autoincrement())
  task_id        Int
  user_id        Int
  assigned_at    DateTime @default(now())

  task Task @relation(fields: [task_id], references: [task_id])
  user User @relation(fields: [user_id], references: [user_id])
}

model Notification {
  notification_id Int      @id @default(autoincrement())
  user_id         Int
  message         String   @db.Text
  is_read         Boolean  @default(false)
  created_at      DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id])
}


model OTP {
  otp String @unique
  user_id Int
  user User @relation(fields: [user_id],references: [user_id])
  created_at      DateTime @default(now())
}


model Invitation {
  id          Int       @id @default(autoincrement())
  token       String    @unique
  project_id  Int
  expires_at  DateTime
  role Role

  project     Project   @relation(fields: [project_id], references: [project_id])
}